apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-gql-deployment
  namespace: app
  labels:
    app: spring-gql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-gql
  template:
    metadata:
      labels:
        app: spring-gql
    spec:
      containers:
        - name: spring-gql-container
          image: docker.io/library/spring-gql:0.0.2-SNAPSHOT
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: spring-gql-secret
                  key: mongodb-username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: spring-gql-secret
                  key: mongodb-password
            - name: MONGODB_PREFIX_URL
              valueFrom:
                configMapKeyRef:
                  name: artist-library-config-map
                  key: mongodb_prefix_url
            - name: MONGODB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: artist-library-config-map
                  key: mongodb_db_name
            - name: MONGODB_CLUSTER
              valueFrom:
                configMapKeyRef:
                  name: artist-library-config-map
                  key: mongodb_cluster
          resources:
            limits:
              cpu: 300m
            requests:
              cpu: 200m
---
kind: Service
apiVersion: v1
metadata:
  name: spring-gql-service
  namespace: app
spec:
  selector:
    app: spring-gql
  type: LoadBalancer # as marked as external service
  ports:
    - name: spring-gql-service
      protocol: TCP
      port: 8080
      targetPort: 8080 # port of pod
      nodePort: 30000 # so now browser will have access by this port